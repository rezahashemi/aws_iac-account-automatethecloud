##-------------------------------------------------------------------------------------------------
# purpose: AWS IaC - Account - AutomateTheCloud (Secrets)
# updated: 2019/10/07
##-------------------------------------------------------------------------------------------------
name: $(Date:yyyy.MM.dd)$(Rev:.r)

trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - /secrets

##-------------------------------------------------------------------------------------------------
variables:
  - group: 'Git-Crypt Key (AutomateTheCloud)'
  - group: 'AWS - Account (AutomateTheCloud)'
  - group: 'AWS - Credentials (AutomateTheCloud - service-azuredevops)'

  - name: build.subdirectory
    value: 'secrets'

  - name: artifact.id
    value: 'automatethecloud-infrastructure_secrets'
  - name: artifact.version
    value: $(Build.BuildNumber)

  - name: init.azure_devops
    value: yes

##-------------------------------------------------------------------------------------------------
jobs:

##---------------------------------------------------------------------------------------
- job: build
  displayName: 'Build'
  pool:
    vmImage: 'Ubuntu 16.04'
  workspace:
    clean: all

  steps:
  ##-----------------------------------------------------------------------------
  # Setup
  - script: |
      CID_URL_LATEST="$(curl -s https://api.github.com/repos/AutomateTheCloud/atc-cid/releases/latest | grep "browser_download_url.*tgz" | cut -d : -f 2,3 | tr -d \" | awk '{$1=$1};1')"
      sudo mkdir -p /opt/cid
      curl -L ${CID_URL_LATEST} | sudo tar zxf - -C /opt/cid
      sudo bash /opt/cid/scripts/utility/install.sh -d /usr/local/sbin/
      AWS_BUILDER_URL_LATEST="$(curl -s https://api.github.com/repos/AutomateTheCloud/atc-aws_builder/releases/latest | grep "browser_download_url.*tgz" | cut -d : -f 2,3 | tr -d \" | awk '{$1=$1};1')"
      sudo mkdir -p /opt/aws_builder
      curl -L ${AWS_BUILDER_URL_LATEST} | sudo tar zxf - -C /opt/aws_builder
      sudo bash /opt/aws_builder/scripts/utility/install.sh -d /usr/local/sbin/
      sudo apt-get update
      sudo DEBIAN_FRONTEND=noninteractive apt-get install git-crypt
    displayName: 'Setup - Install'
    name: setup_install

  - script: |
      cid.initialize_workspace
    displayName: 'Setup - Initialize Workspace'
    name: setup_initialize
    env:
      GITCRYPT_KEY: $(gitcrypt.key)

  ##-----------------------------------------------------------------------------
  # Package
  - task: ArchiveFiles@2
    displayName: 'Package - Generate Package Tarball'
    inputs:
      rootFolderOrFile: $(Build.SourcesDirectory)/$(build.subdirectory)
      includeRootFolder: false
      archiveType: 'tar'
      tarCompression: 'gz'
      archiveFile: '$(workspace.directory.temp)/$(artifact.id)-$(artifact.version).tgz'
      replaceExistingArchive: true
      verbose: true

  - script: aws_builder.kms.encrypt_file -r "$(aws.region.primary)" -k "$(aws.kms_key.audit)" -f "$(workspace.directory.temp)/$(artifact.id)-$(artifact.version).tgz" -d "$(workspace.directory.artifacts)"
    displayName: 'Package - Encrypt'
    env:
      AWS_SECRET_ACCESS_KEY: $(aws.secret_access_key)

  ##-----------------------------------------------------------------------------
  # Archive
  - task: PublishBuildArtifacts@1
    displayName: 'Archive - Publish Pipeline Build Artifacts'
    inputs:
      pathtoPublish: '$(workspace.directory.artifacts)'
      artifactName: 'build'
